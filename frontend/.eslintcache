[{"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\context\\ThemeContext.js":"4","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\navigation\\Navbar.js":"5","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\reducers\\auth.js":"6","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\reducers\\reviews.js":"7","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\reducers\\plans.js":"8","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\About.js":"9","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Home.js":"10","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\footer\\Footer.js":"11","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\cookies.js":"12","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\SignUp.js":"13","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\Login.js":"14","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\CompanyProfile.js":"15","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\Logout.js":"16","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Plans\\Plans.js":"17","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\actions\\reviews.js":"18","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\actions\\auth.js":"19","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\actions\\plans.js":"20","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Plans\\ViewPlans.js":"21","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\dummy-data\\plan.js":"22","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\utils\\formValidation.js":"23","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Error\\Error.jsx":"24","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Loading\\Loading.jsx":"25","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\dummy-data\\data.js":"26"},{"size":811,"mtime":1616050793274,"results":"27","hashOfConfig":"28"},{"size":1645,"mtime":1616052217287,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1616050793274,"results":"30","hashOfConfig":"28"},{"size":465,"mtime":1616050793274,"results":"31","hashOfConfig":"28"},{"size":8523,"mtime":1621333021847,"results":"32","hashOfConfig":"28"},{"size":750,"mtime":1616051701054,"results":"33","hashOfConfig":"28"},{"size":344,"mtime":1616051701056,"results":"34","hashOfConfig":"28"},{"size":947,"mtime":1616051701055,"results":"35","hashOfConfig":"28"},{"size":1117,"mtime":1616050793274,"results":"36","hashOfConfig":"28"},{"size":9113,"mtime":1621333034436,"results":"37","hashOfConfig":"28"},{"size":2822,"mtime":1616050848680,"results":"38","hashOfConfig":"28"},{"size":961,"mtime":1616050793274,"results":"39","hashOfConfig":"28"},{"size":13257,"mtime":1616050848679,"results":"40","hashOfConfig":"28"},{"size":5710,"mtime":1616050848675,"results":"41","hashOfConfig":"28"},{"size":537,"mtime":1616051701049,"results":"42","hashOfConfig":"28"},{"size":2271,"mtime":1616050848676,"results":"43","hashOfConfig":"28"},{"size":11641,"mtime":1616056583586,"results":"44","hashOfConfig":"28"},{"size":534,"mtime":1616051701052,"results":"45","hashOfConfig":"28"},{"size":2320,"mtime":1616051701050,"results":"46","hashOfConfig":"28"},{"size":2472,"mtime":1616056185613,"results":"47","hashOfConfig":"28"},{"size":3831,"mtime":1616053973005,"results":"48","hashOfConfig":"28"},{"size":1523,"mtime":1616051839059,"results":"49","hashOfConfig":"28"},{"size":1499,"mtime":1616050848686,"results":"50","hashOfConfig":"28"},{"size":849,"mtime":1615988408412,"results":"51","hashOfConfig":"28"},{"size":788,"mtime":1615988408430,"results":"52","hashOfConfig":"28"},{"size":8151,"mtime":1621329322178,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1m2byrz",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\index.js",[],["118","119"],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\App.js",["120","121"],"import React from \"react\";\r\nimport {ThemeProvider, createMuiTheme, colors, CssBaseline} from \"@material-ui/core\";\r\nimport Navbar from \"./components/navigation/Navbar\";\r\nimport {blue, red} from \"@material-ui/core/colors\";\r\nimport {ThemeContext} from \"./context/ThemeContext\";\r\nimport './App.css';\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport AuthReducer from \"./redux/reducers/auth\";\r\nimport PlansReducer from \"./redux/reducers/plans\";\r\nimport ReviewReducer from \"./redux/reducers/reviews\"\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    auth : AuthReducer,\r\n    plans : PlansReducer,\r\n    reviews : ReviewReducer\r\n  }),\r\n  applyMiddleware(thunk, logger)\r\n);\r\n\r\n\r\n\r\nfunction App() {\r\n  const {dark} = React.useContext(ThemeContext);\r\n\r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: `\"Poppins\", sans-serif`,\r\n      fontSize: 14,\r\n      fontWeightLight: 300,\r\n      fontWeightRegular: 400,\r\n      fontWeightMedium: 500\r\n    },\r\n    palette: {\r\n      type: dark ? 'dark' : 'light',\r\n      primary: {\r\n        main: dark?blue[300]:blue[500],\r\n      },\r\n      secondary: {\r\n        main: '#ffc107',\r\n      },\r\n    },\r\n    overrides: {\r\n      MuiTypography: {\r\n        body2: {\r\n          fontSize: [15, \"!important\"]\r\n        }\r\n      }\r\n    }\r\n  })\r\n  //#64b5f6\r\n\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n      <CssBaseline/>\r\n      <Navbar/>\r\n      </Provider>\r\n    </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\context\\ThemeContext.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\navigation\\Navbar.js",["122","123","124","125","126","127","128"],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\reducers\\auth.js",["129"],"import { \r\n    LOGOUT_USER,\r\n    AUTHENTICATE,\r\n    GET_PROFILE,\r\n  SAVE_ASN} from '../actions/auth';\r\n  \r\n  const initialState = {\r\n    token: null,\r\n    asn : null,\r\n    profile : {}\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case AUTHENTICATE:\r\n        return {\r\n          ...state,\r\n          token: action.token\r\n        };\r\n      case SAVE_ASN:\r\n          return {\r\n            ...state,\r\n            asn : action.asn\r\n          };\r\n      case GET_PROFILE :\r\n          return {\r\n            ...state,\r\n            profile : Object.assign(state.profile,action.payload)\r\n          }\r\n      case  LOGOUT_USER:\r\n        return initialState;\r\n      default:\r\n        return state;\r\n    }\r\n  };","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\reducers\\reviews.js",["130"],"import {\r\n    FETCH_REVIEWS\r\n} from '../actions/reviews'\r\n\r\nconst initialState = {\r\n    reviews: []\r\n}\r\n\r\nexport default (state = initialState,action)=>{\r\n    switch (action.type){\r\n        case FETCH_REVIEWS:\r\n            return {\r\n                reviews : action.payload\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\reducers\\plans.js",["131"],"import {\r\n    FETCH_PLANS,\r\n    ADD_PLAN,\r\n    UPDATE_PLAN,\r\n    DELETE_PLAN\r\n} from '../actions/plans'\r\n\r\nconst initialState = {\r\n    plans: []\r\n}\r\n\r\nexport default (state = initialState,action)=>{\r\n    switch (action.type){\r\n        case FETCH_PLANS:\r\n            return {\r\n                plans : action.payload\r\n            }\r\n        case ADD_PLAN:\r\n            return {\r\n                plans: state.plans.concat(action.payload)\r\n            }\r\n        case UPDATE_PLAN : \r\n            for(var i in state.notes){\r\n                if(state.plans[i]._id === action.plan._id){\r\n                    state.plans[i] = Object.assign(state.plans[i],action.plan)\r\n                    break;\r\n                }\r\n            }\r\n            return state;\r\n        case DELETE_PLAN : \r\n            return {\r\n                plans : state.plans.filter(plan=>plan._id!==action.plan_id)\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\About.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Home.js",["132","133","134","135","136","137"],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\footer\\Footer.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\cookies.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\SignUp.js",["138","139","140"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useHistory } from \"react-router\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {SignUpUser} from \"../../redux/actions/auth\"\r\nimport formValidation from '../utils/formValidation';\r\n\r\nconst initialValues = {\r\n    asnNo : \"\",\r\n    company_email : \"\",\r\n    company_password : \"\",\r\n    company_password_confirm : \"\",\r\n    ISP_name : \"\",\r\n    type_of_service : \"\",\r\n    photoUrl : \"\",\r\n    webUrl : \"\"\r\n}\r\n\r\nconst fieldsValidation = {\r\n    asnNo : {\r\n        error: \"\",\r\n        validate: \"string\",\r\n        minLength : 7,\r\n        maxLength : 10\r\n    },\r\n    company_email : {\r\n        error: \"\",\r\n        validate: \"email\"\r\n    },\r\n    company_password : {\r\n        error: \"\",\r\n        validate: \"string\",\r\n        minLength : 6,\r\n        maxLength : 10\r\n    },\r\n    company_password_confirm : {\r\n        error: \"\",\r\n        validate: \"string\",\r\n        minLength : 6,\r\n        maxLength : 10\r\n    },\r\n    ISP_name: {\r\n        error: \"\",\r\n        validate: \"text\",\r\n        minLength: 2,\r\n        maxLength: 20\r\n    },\r\n    type_of_service : {\r\n        error: \"\",\r\n        validate: \"text\"\r\n    },\r\n    photoUrl : {\r\n        error: \"\",\r\n        validate: \"text\"\r\n    },\r\n    webUrl : {\r\n        error: \"\",\r\n        validate: \"text\",\r\n        minLength: 2,\r\n        maxLength: 100\r\n    }\r\n}\r\n\r\n\r\nconst SignUp = ({ open, setOpen }) => {\r\n    const [values, setValues] = useState(initialValues);\r\n    const [stage, setStage] = useState(0);\r\n    const [url,setUrl] = useState(null);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const [errors, setErrors] = useState({})\r\n    const [visible, setVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const handleClose = () => setOpen(false);\r\n    \r\n\r\n    const handleChange=(e)=>{\r\n        const { name, value } = e.target\r\n        // Set values\r\n        setValues(prev => ({\r\n          ...prev,\r\n          [name]: value\r\n        }))\r\n    \r\n        // set errors\r\n        const error = formValidation(name, value, fieldsValidation) || \"\"\r\n    \r\n        setErrors(prev => ({\r\n          ...prev,\r\n          [name]: error\r\n        }))\r\n    }\r\n\r\n    const handlefileUpload = (event)=>{\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(event.target.files[0]);\r\n\r\n        reader.onloadend = function () {\r\n            setUrl([reader.result]);\r\n        }.bind(this);\r\n       \r\n        setValues(prev => ({\r\n          ...prev,\r\n          image : event.target.files[0]\r\n        }))\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        setStage(0);\r\n    }, [open])\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        try{\r\n            enqueueSnackbar('Getting Network Info....', {variant: 'info', key: 'verifying'});\r\n            const data = await fetch(\"https://cors-anywhere.herokuapp.com/http://api.ipify.org/?format=json\");\r\n            const ip = await data.json();\r\n            fetch(`http://ip-api.com/json/${ip.ip}?fields=isp,org,as,mobile`)\r\n            .then(data=>data.json())\r\n            .then(isp=>{\r\n                closeSnackbar('verifying');\r\n                setValues({\r\n                    ...values,\r\n                    asnNo:isp.as.split(' ')[0],\r\n                    ISP_name : isp.isp\r\n                })\r\n                signup();\r\n            });  \r\n        }catch(error){\r\n            setTimeout(() => enqueueSnackbar(error.message,{\r\n                variant: 'error',\r\n                key: 'err_asn'\r\n            }),\r\n              3000);\r\n            setTimeout(() => closeSnackbar('err_asn'), 6000);\r\n        }          \r\n    }\r\n\r\n    const signup = async ()=>{\r\n        try {\r\n            enqueueSnackbar('Signing Up....', {variant: 'info', key: 'signup'});\r\n            await dispatch(\r\n                SignUpUser(\r\n                    values.email,\r\n                    values.password,\r\n                    values.asnNo,\r\n                    values.ISP_name,\r\n                    values.photoUrl,\r\n                    values.webUrl,\r\n                    values.type_of_service\r\n                )\r\n            );\r\n            setStage((stage+1)%2);\r\n            closeSnackbar('signup');\r\n            history.push('/login')\r\n         } catch (error) {\r\n             setTimeout(() => enqueueSnackbar(\"Sign Up failed:(\",{\r\n                 variant: 'error',\r\n                 key: 'err_su'\r\n             }),\r\n               3000);\r\n             setTimeout(() => closeSnackbar('err_su'), 6000);\r\n         }\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-login\">\r\n                <DialogTitle id=\"form-dialog-login\">\r\n                    {stage===0 ? 'Sign Up Details' : 'Company Details'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {stage===0?(\r\n                        <React.Fragment>\r\n                            <TextField\r\n                                name=\"company_email\"\r\n                                variant=\"outlined\"\r\n                                label=\"Email Address\"\r\n                                type=\"email\"\r\n                                value={values.company_email}\r\n                                margin=\"normal\"\r\n                                error={!!errors.company_email}\r\n                                helperText={errors.company_email}\r\n                                onChange={handleChange}\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                name=\"company_password\"\r\n                                variant=\"outlined\"\r\n                                label=\"Password\"\r\n                                margin=\"normal\"\r\n                                value={values.company_password}\r\n                                type={visible? \"text\":\"password\"}\r\n                                error={!!errors.company_password}\r\n                                helperText={errors.company_password}\r\n                                onChange={handleChange}\r\n                                InputProps={{\r\n                                    endAdornment:\r\n                                        <IconButton\r\n                                            aria-label=\"Toggle visibility\"\r\n                                            onClick={() => setVisible(!visible)}\r\n                                        >\r\n                                            {visible? <Visibility /> : <VisibilityOff /> }\r\n                                        </IconButton>\r\n                                }}\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                name=\"company_password_confirm\"\r\n                                variant=\"outlined\"\r\n                                label=\"Confirm Password\"\r\n                                margin=\"normal\"\r\n                                error={!!errors.company_password_confirm}\r\n                                helperText={errors.company_password_confirm}\r\n                                type={visible? \"text\":\"password\"}\r\n                                value={values.company_password_confirm}\r\n                                onChange={handleChange}\r\n                                InputProps={{\r\n                                    endAdornment:\r\n                                        <IconButton\r\n                                            aria-label=\"Toggle visibility\"\r\n                                            onClick={() => setVisible(!visible)}\r\n                                        >\r\n                                            {visible? <Visibility /> : <VisibilityOff /> }\r\n                                        </IconButton>\r\n                                }}\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                        </React.Fragment>\r\n                    ):(\r\n                        <React.Fragment>\r\n                            <TextField\r\n                                name=\"asnNo\"\r\n                                variant=\"outlined\"\r\n                                label=\"Autonomous System Number\"\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                value={values.asnNo}\r\n                                onChange={handleChange}\r\n                                error={!!errors.asnNo}\r\n                                helperText={errors.asnNo}\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                name=\"ISP_name\"\r\n                                variant=\"outlined\"\r\n                                value={values.ISP_name}\r\n                                label=\"ISP Company Name\"\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                error={!!errors.ISP_name}\r\n                                helperText={errors.ISP_name}\r\n                                onChange={handleChange}\r\n                                autoFocus\r\n                                fullWidth\r\n                                required/>\r\n                            <TextField\r\n                                name=\"type_of_service\"\r\n                                variant=\"outlined\"\r\n                                label=\"Type of Service\"\r\n                                type=\"text\"\r\n                                value={values.type_of_service}\r\n                                margin=\"normal\"\r\n                                error={!!errors.type_of_service}\r\n                                helperText={errors.type_of_service}\r\n                                onChange={handleChange}\r\n                                autoFocus\r\n                                fullWidth\r\n                                required/>\r\n                             <TextField\r\n                                name=\"photoUrl\"\r\n                                variant=\"outlined\"\r\n                                label=\"Photo URL\"\r\n                                value={values.photoUrl}\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                onChange={handleChange}\r\n                                autoFocus\r\n                                fullWidth\r\n                                required/>\r\n                             <TextField\r\n                                name=\"webUrl\"\r\n                                variant=\"outlined\"\r\n                                label=\"ISP Company Website URL\"\r\n                                type=\"text\"\r\n                                value={values.webUrl}\r\n                                error={!!errors.webUrl}\r\n                                helperText={errors.webUrl}\r\n                                margin=\"normal\"\r\n                                onChange={handleChange}\r\n                                autoFocus\r\n                                fullWidth\r\n                                required/>\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    margin=\"normal\"\r\n                                    onClick={() => setStage(stage-1)}\r\n                                    color='primary'\r\n                                    variant='contained'\r\n                                > Back</Button>\r\n                        </React.Fragment>\r\n                    )}\r\n                </DialogContent>\r\n                {stage===0?(\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} variant='contained' color=\"secondary\">Cancel</Button>\r\n                        <Button onClick={()=>setStage(stage=>(stage+1)%2)} variant='contained' color=\"primary\">Next</Button>\r\n                    </DialogActions>\r\n                ):(\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} variant='contained' color=\"secondary\">Cancel</Button>\r\n                        <Button onClick={handleSubmit} variant='contained' color=\"primary\">Sign Up</Button>\r\n                    </DialogActions>\r\n                )}\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\Login.js",["141","142","143","144","145","146","147"],"import React,{useState} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Grid,Paper,Typography} from '@material-ui/core'\r\nimport { useSnackbar } from \"notistack\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport {ThemeContext} from \"../../context/ThemeContext\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {loginUser} from '../../redux/actions/auth';\r\nimport formValidation from '../utils/formValidation';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    logo : {\r\n        [theme.breakpoints.down('md')] : {\r\n            display : 'none'\r\n        }\r\n    },\r\n    paper :{\r\n        padding : 30,\r\n        [theme.breakpoints.up('md')] : {\r\n            marginLeft:30,\r\n            marginRight:30\r\n        }\r\n    }\r\n}))\r\n\r\nconst fieldsValidation = {\r\n    email : {\r\n        error: \"\",\r\n        validate: \"email\"\r\n    },\r\n    password : {\r\n        error: \"\",\r\n        validate: \"string\",\r\n        minLength : 0\r\n    },\r\n}\r\n\r\nconst Login = ({setloggedIn,setTitle}) => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const {dark, toggleTheme} = React.useContext(ThemeContext);\r\n    const dispatch = useDispatch();\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const [errors, setErrors] = useState({})\r\n    const [visible, setVisible] = useState(false);\r\n\r\n\r\n    const handleChange=(e)=>{\r\n        const { name, value } = e.target\r\n        // Set values\r\n        setValues(prev => ({\r\n          ...prev,\r\n          [name]: value\r\n        }))\r\n    \r\n        // set errors\r\n        const error = formValidation(name, value, fieldsValidation) || \"\"\r\n    \r\n        setErrors(prev => ({\r\n          ...prev,\r\n          [name]: error\r\n        }))\r\n    }\r\n\r\n\r\n    const handleSubmit = async ()=>{\r\n        if (errors.emailError || errors.passwordError) {\r\n            return;\r\n         }else{\r\n             enqueueSnackbar('Logging in....', {variant: 'info', key: 'logging_in'});\r\n             try{\r\n                 //await dispatch(loginUser(values.email,values.password));\r\n                 setTimeout(() => closeSnackbar('logging_in'), 3000);\r\n                 setTimeout(() => enqueueSnackbar('Logged in Successfully!',{\r\n                     variant: 'success',\r\n                     key: 'logged_in'\r\n                 }),\r\n                 3000);\r\n                 setTimeout(() => closeSnackbar('logged_in'), 6000);\r\n                 setloggedIn();\r\n                 history.push('/');\r\n             }catch(e){\r\n                 setTimeout(() => closeSnackbar('logging_in'), 3000);\r\n                 setTimeout(() => enqueueSnackbar(e.message, {variant: 'error', key: 'error'}), 3000);\r\n                 setTimeout(() => closeSnackbar('error'), 6000);\r\n             }\r\n         }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\r\n                <Grid item md={6} xs={12} >\r\n                    <Paper elevation={2} className={classes.paper}>\r\n                    <Typography variant='caption'>\r\n                        The company can login into this portal if they have officially registered.\r\n                    </Typography>\r\n                    <TextField\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        label=\"Company Email Address\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        margin=\"normal\"\r\n                        onChange={handleChange}\r\n                        helperText={errors.email}\r\n                        error={!!errors.email}\r\n                        fullWidth\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        name=\"password\"\r\n                        variant=\"outlined\"\r\n                        label=\"Password\"\r\n                        value={values.password}\r\n                        margin=\"normal\"\r\n                        type={visible? \"text\":\"password\"}\r\n                        helperText={errors.password}\r\n                        error={!!errors.email}\r\n                        name=\"password\"\r\n                        onChange={handleChange}\r\n                        InputProps={{\r\n                            endAdornment:\r\n                            <IconButton\r\n                                aria-label=\"Toggle visibility\"\r\n                                onClick={() => setVisible(!visible)}\r\n                            >\r\n                                {visible? <Visibility /> : <VisibilityOff /> }\r\n                            </IconButton>\r\n                        }}\r\n                        fullWidth\r\n                        autoFocus\r\n                        required\r\n                    />\r\n                    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\" style={{width:'100%',marginTop:10}}>\r\n                        Login\r\n                    </Button>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item md={6} xs={0} align=\"center\" className={classes.logo}>\r\n                {dark ? <img src='rnlogod.png'/> \r\n                : <img src='rnlogo.png'/>}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n//}\r\n                    \r\n\r\nexport default Login;","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\CompanyProfile.js",["148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React,{useEffect,useState} from \"react\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {Typography,Grid,TextField,makeStyles,Paper,Divider} from \"@material-ui/core\";\r\nimport {Map,GoogleApiWrapper} from 'google-maps-react';\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    map : {\r\n        padding : 10\r\n    }\r\n\r\n}))\r\n\r\nconst CompanyProfile=(props)=>{\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyProfile;","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\authentication\\Logout.js",["161"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Logout = ({ open, setOpen, setLoggedIn,setDrawerOpen ,setTitle}) => {\r\n    const theme = useTheme();\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\r\n    let history = useHistory();\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleSubmit = () => {\r\n        enqueueSnackbar('Logging out....', {variant: 'info', key: 'logging_out'});\r\n        localStorage.clear();\r\n        //setTitle(\"RaterNet\")\r\n        setTimeout(() => closeSnackbar('logging_out'), 3000);\r\n        setTimeout(() => enqueueSnackbar('Logged out Successfully!', {variant: 'success', key: 'logged_out'}), 3000);\r\n        setTimeout(() => closeSnackbar('logged_out'), 6000);\r\n        setTimeout(() => setLoggedIn(false), 3000);\r\n        //setTimeout(() => history.push('/login'),3000);\r\n        setDrawerOpen(false);\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-logout\">\r\n                <DialogTitle id=\"form-dialog-logout\">Logout</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText style={{ color: theme.palette.text.primary }}>\r\n                        Are you sure you want to logout?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} variant=\"outlined\" color=\"primary\">\r\n                        Logout\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Plans\\Plans.js",["162","163","164","165","166","167","168","169"],"import React,{useEffect} from \"react\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport formValidation from '../utils/formValidation';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n    makeStyles,\r\n    Paper,\r\n    Divider,\r\n    Avatar,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport ViewPlans from './ViewPlans'\r\nimport {dummy_plans} from '../../dummy-data/plan'\r\nimport {addPlan,fetchPlans,updatePlan,deletePlan} from '../../redux/actions/plans'\r\nimport Error from '../Error/Error';\r\nimport Loading from '../Loading/Loading'\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    map : {\r\n        padding : 10\r\n    },\r\n    large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    }\r\n}))\r\n\r\nconst values = {\r\n    plan_name : \"\",\r\n    type_of_service : \"\",\r\n    type_of_plan : \"\",\r\n    price : \"\",\r\n    amount_data : \"\",\r\n    duration : \"\",\r\n    details : \"\"\r\n}\r\n\r\nconst fieldsValidation = {\r\n    plan_name : {\r\n        error: \"\",\r\n        validate: \"text\"\r\n    },\r\n    type_of_service : {\r\n        error: \"\",\r\n        validate: \"string\"\r\n    },\r\n    type_of_plan : {\r\n        error: \"\",\r\n        validate: \"string\"\r\n    },\r\n    price : {\r\n        error: \"\",\r\n        validate: \"number\",\r\n        minLength: 2,\r\n        maxLength: 1000\r\n    },\r\n    amount_data : {\r\n        error: \"\",\r\n        validate: \"text\"\r\n    },\r\n    duration : {\r\n        error: \"\",\r\n        validate: \"number\",\r\n        minLength: 1,\r\n        maxLength: 6\r\n    },\r\n    details : {\r\n        error: \"\",\r\n        validate: \"text\",\r\n        minLength: 2,\r\n        maxLength: 20\r\n    }\r\n}\r\n\r\nconst Plans = (props) => {\r\n    const [formValues, setFormValues] = useState(values)\r\n    const [formErrors, setFormErrors] = useState({})\r\n    const [url,setUrl] = useState(null);\r\n    const classes = useStyles();\r\n    //const plans = useSelector(state=>state.plans.plans);\r\n    const dispatch = useDispatch();\r\n    const [loading,setLoading] = React.useState(false);\r\n    const [error,setError] = React.useState(null);\r\n    const [isUpdate,setisUpdate] = React.useState(false);\r\n    const [plans,setPlans] = React.useState(dummy_plans);\r\n    const [image,setImage] = React.useState(null);\r\n\r\n\r\n    function UploadButtons() {\r\n        const classes = useStyles();\r\n      \r\n        return (\r\n          <React.Fragment>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              onChange={handlefileUpload}\r\n              type=\"file\"\r\n            />\r\n            <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handlefileUpload}/>\r\n            <label htmlFor=\"icon-button-file\">\r\n              <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                <PhotoCamera fontSize=\"large\"/>\r\n              </IconButton>\r\n            </label>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n\r\n    const getPlans = async (asn)=>{\r\n          try{\r\n            await dispatch(fetchPlans(asn));\r\n            setLoading(false)\r\n          } catch(e){\r\n            setError(e.message);\r\n            setLoading(false);\r\n          }\r\n         \r\n      }\r\n\r\n    React.useEffect(()=>{\r\n        //getPlans(asn) asn from decoded token\r\n    },[dispatch])\r\n\r\n    const addorUpdatePlans = async ()=>{\r\n        let action;\r\n        if(isUpdate===true){\r\n            action = updatePlan(formValues,image);\r\n        }else {\r\n            action = addPlan(formValues,image)\r\n        }\r\n\r\n        /*try{\r\n          await dispatch(action);\r\n        } catch(e){\r\n          setError(e.message);\r\n        }*/\r\n       \r\n    }\r\n\r\n    const deletePlanHandler = async (id)=>{\r\n        try{\r\n          //await dispatch(deletePlan(id));\r\n        } catch(e){\r\n          setError(e.message);\r\n        }  \r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n        const { name, value } = e.target\r\n        // Set values\r\n        setFormValues(prev => ({\r\n          ...prev,\r\n          [name]: value\r\n        }))\r\n    \r\n        // set errors\r\n        const error = formValidation(name, value, fieldsValidation) || \"\"\r\n    \r\n        setFormErrors(prev => ({\r\n          ...prev,\r\n          [name]: error\r\n        }))\r\n    }\r\n\r\n    const handlefileUpload = (event)=>{\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(event.target.files[0]);\r\n\r\n        reader.onloadend = function () {\r\n            setUrl([reader.result]);\r\n        }.bind(this);\r\n       \r\n        setImage(\r\n          event.target.files[0]\r\n        )\r\n    }\r\n\r\n    const setValues = (id)=>{\r\n        let plan = plans.filter(plan=>plan._id===id)[0];\r\n        setFormValues({...plan})\r\n        setisUpdate(true);\r\n    }\r\n\r\n    if(error){\r\n        return <Error message = {error}/>\r\n    }\r\n\r\n    if(loading){\r\n        return <Loading message = \"Loading Your Plans\"/>\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" spacing={2}>\r\n            <Grid item xs={6}>\r\n                <Paper elevation={3} style={{padding:20}}>\r\n                <div style={{display:'flex',margin:10}}>\r\n                    <Avatar alt='image' src={url} className={classes.large}/>\r\n                    <div style={{\r\n                        display:'flex',\r\n                        justifyContent : 'space-between',\r\n                        marginLeft : 40,\r\n                        alignItems : 'center',\r\n                        width : '100%'\r\n                    }}>\r\n                        <Typography variant='h4'>\r\n                            Add Plan\r\n                        </Typography>\r\n                        {UploadButtons()}\r\n                    </div>  \r\n                </div>\r\n                <TextField\r\n                    name=\"plan_name\"\r\n                    variant=\"outlined\"\r\n                    value={formValues.plan_name}\r\n                    label=\"Name of Plan\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    onChange={handleChange}\r\n                    error={!!formErrors.plan_name}\r\n                    helperText={formErrors.plan_name}\r\n                    autoFocus\r\n                    fullWidth\r\n                    required/>\r\n                <div style={{\r\n                    display : 'flex',\r\n                    justifyContent : 'space-between',\r\n                    marginLeft : 10,\r\n                    marginRight : 10,\r\n                    alignItems : 'center'\r\n                }}>\r\n                    <FormControl style={{width:'40%'}}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Plan Type</InputLabel>\r\n                        <Select\r\n                            labelId=\"type_of_plan\"\r\n                            name=\"type_of_plan\"\r\n                            value={formValues.type_of_plan}\r\n                            onChange={handleChange}\r\n                        >\r\n                            <MenuItem value={'Prepaid'}>Prepaid</MenuItem>\r\n                            <MenuItem value={'Postpaid'}>Postpaid</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                        <FormControl style={{width:'40%'}}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Service Type</InputLabel>\r\n                        <Select\r\n                            labelId=\"type_of_service\"\r\n                            name=\"type_of_service\"\r\n                            value={formValues.type_of_service}\r\n                            onChange={handleChange}\r\n                        >\r\n                            <MenuItem value={'Data'}>Data</MenuItem>\r\n                            <MenuItem value={'WiFi'}>WiFi</MenuItem>\r\n                            <MenuItem value={'Fiber/Broadband'}>Fiber/Broadband</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                \r\n                <TextField\r\n                    name=\"price\"\r\n                    variant=\"outlined\"\r\n                    value={formValues.price}\r\n                    label=\"Price\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    onChange={handleChange}\r\n                    error={!!formErrors.price}\r\n                    helperText={formErrors.price}\r\n                    autoFocus\r\n                    fullWidth\r\n                    required/>\r\n                <TextField\r\n                    name=\"amount_data\"\r\n                    variant=\"outlined\"\r\n                    value={formValues.amount_data}\r\n                    label=\"Data Amount(GB)\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    onChange={handleChange}\r\n                    error={!!formErrors.amount_data}\r\n                    helperText={formErrors.amount_data}\r\n                    autoFocus\r\n                    fullWidth\r\n                    required/>\r\n                <TextField\r\n                    name=\"duration\"\r\n                    variant=\"outlined\"\r\n                    value={formValues.duration}\r\n                    label=\"Duration\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    onChange={handleChange}\r\n                    error={!!formErrors.duration}\r\n                    helperText={formErrors.duration}\r\n                    autoFocus\r\n                    fullWidth\r\n                    required/>\r\n                <TextField\r\n                    name=\"details\"\r\n                    variant=\"outlined\"\r\n                    value={formValues.details}\r\n                    label=\"Other Details\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    error={!!formErrors.details}\r\n                    helperText={formErrors.details}\r\n                    onChange={handleChange}\r\n                    autoFocus\r\n                    fullWidth\r\n                    required/>\r\n                    <div style={{ display:'flex',marginTop:10,justifyContent:'space-between'}}>\r\n                       {isUpdate ? (\r\n                            <Button variant=\"contained\" color=\"primary\" \r\n                            style={{width:'40%'}} onClick={addorUpdatePlans}>\r\n                                Update Plan\r\n                            </Button>\r\n                       ): (\r\n                        <Button variant=\"contained\" color=\"primary\" \r\n                            style={{width:'40%'}} onClick={addorUpdatePlans}>\r\n                                Add Plan\r\n                        </Button>\r\n                       )}\r\n                        <Button variant=\"contained\" color=\"secondary\" \r\n                            style={{width:'40%'}}\r\n                            onClick={()=>{\r\n                            setFormValues(values)\r\n                            setFormErrors({})\r\n                            setUrl(null)\r\n                            setisUpdate(false)\r\n                            }}>Reset</Button>\r\n                    </div> \r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <ViewPlans plans={plans} setValues={setValues} deletePlan={deletePlanHandler}/>\r\n            </Grid>   \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Plans;","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\actions\\reviews.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\actions\\auth.js",["170"],"\r\nexport const AUTHENTICATE = 'AUTHENTICATE'; \r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const SAVE_ASN = 'SAVE_ASN';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\n\r\nconst baseUrl = ``;\r\nconst saveUrl='';\r\nconst SignUpUrl = ``;\r\n\r\nexport const authenticate = (token) => {\r\n  return dispatch => {\r\n    dispatch({ \r\n      type: AUTHENTICATE,\r\n      token: token\r\n     });\r\n  };\r\n}\r\n\r\nexport const SignUpUser = (email,password,asn,name,photo,web,service)=>{\r\n  return async dispatch =>{\r\n    const response = await fetch(SignUpUrl,{\r\n      method: 'POST',\r\n      headers : {\r\n          'Content-Type' : 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n          email:email,\r\n          password:password,\r\n          ASN:asn,\r\n          ISP_name : name,\r\n          photoUrl : photo,\r\n          webUrl : web,\r\n          type_of_service : service\r\n      })\r\n    });\r\n    const responseData = await response.json();\r\n    console.log(responseData);\r\n    \r\n    if (responseData.error) {\r\n      throw new Error(responseData.error.message);\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const getProfileDetails = (asn)=>{\r\n  return async dispatch=>{\r\n    const response = await fetch(baseUrl + \"\");\r\n    const responseData = await response.json();\r\n    \r\n    if (responseData.error) {\r\n      throw new Error(responseData.error.message);\r\n    }else {\r\n      dispatch({\r\n        type : GET_PROFILE,\r\n        payload : responseData\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const loginUser = (email, password)=>{\r\n    const loginUrl = baseUrl;\r\n\r\n    return async dispatch=>{\r\n        const response = await fetch(loginUrl,{\r\n            method: 'POST',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email:email,\r\n                password:password,\r\n                returnSecureToken : true\r\n            })\r\n        });\r\n        const responseData = await response.json();\r\n    \r\n        if (responseData.error) {\r\n          throw new Error(responseData.error.message);\r\n        }\r\n        \r\n        dispatch(\r\n          authenticate(\r\n            responseData.token\r\n          )\r\n        );\r\n        saveDataToStorage(responseData.token);\r\n    }\r\n}\r\n\r\n\r\nconst saveDataToStorage = (token) => {\r\n  localStorage.setItem('token',token);\r\n};","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\redux\\actions\\plans.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Plans\\ViewPlans.js",["171","172"],"import React from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { \r\n    Grid,\r\n    makeStyles,\r\n    Paper,\r\n    Divider,\r\n    Box,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\n\r\nconst ViewPlans = (props) => {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const renderPlans = (plans)=>(\r\n    <React.Fragment>\r\n        {plans.map(plan=>(\r\n            <Paper key={plan._id} elevation={2} style={{\r\n                margin : 10,\r\n                padding : 20\r\n            }}>\r\n                <div style={{display:'flex',justifyContent : 'space-between'}}>\r\n                    <Typography variant='h5'>\r\n                        {plan.plan_name}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                        {plan.type_of_service}\r\n                    </Typography>\r\n                </div>\r\n                <div style={{display:'flex',justifyContent : 'space-between',padding:10}}>\r\n                    <Chip size='large' label={plan.price.toString()+' INR'} color='primary'/>\r\n                    <Chip size='large' label={plan.amount_data} color='primary'/>\r\n                    <Chip size='large' label={plan.duration} color='primary'/>\r\n                </div>\r\n                <Divider fullWidth/>\r\n                <br></br>\r\n                <Typography variant=\"body2\" color='textSecondary'>\r\n                    {plan.details}\r\n                </Typography>\r\n                <br></br>\r\n                <div style={{display:'flex',justifyContent : 'space-between'}}>\r\n                    <Button \r\n                    variant='contained' \r\n                    color='primary' \r\n                    style={{width:'40%'}}\r\n                    onClick={props.setValues.bind(this,plan._id)}>Update</Button>\r\n                    <Button variant='contained'\r\n                     color='secondary' \r\n                     style={{width:'40%'}}\r\n                     onClick={props.deletePlan.bind(this,plan._id)}>Delete</Button>\r\n                </div>\r\n            </Paper>\r\n        ))}\r\n        </React.Fragment>\r\n    )\r\n    \r\n    return (\r\n       <div>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" centered>\r\n            <Tab label=\"Prepaid\" {...a11yProps(0)} />\r\n            <Tab label=\"Postpaid\" {...a11yProps(1)} />\r\n            </Tabs>\r\n            <div style={{\r\n                height : '100vh',\r\n                overflow : 'auto'\r\n            }}>\r\n                <TabPanel value={value} index={0}>\r\n                    {renderPlans(props.plans.filter(plan=>plan.type_of_plan===\"Prepaid\"))}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    {renderPlans(props.plans.filter(plan=>plan.type_of_plan===\"Postpaid\"))}\r\n                </TabPanel>\r\n            </div>    \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ViewPlans;","C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\dummy-data\\plan.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\utils\\formValidation.js",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Error\\Error.jsx",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\components\\Loading\\Loading.jsx",[],"C:\\Users\\admin\\Desktop\\RaterNet\\frontend\\src\\dummy-data\\data.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":40,"nodeType":"179","messageId":"180","endLine":2,"endColumn":46},{"ruleId":"177","severity":1,"message":"181","line":4,"column":15,"nodeType":"179","messageId":"180","endLine":4,"endColumn":18},{"ruleId":"177","severity":1,"message":"182","line":16,"column":24,"nodeType":"179","messageId":"180","endLine":16,"endColumn":32},{"ruleId":"177","severity":1,"message":"183","line":17,"column":9,"nodeType":"179","messageId":"180","endLine":17,"endColumn":15},{"ruleId":"177","severity":1,"message":"184","line":21,"column":8,"nodeType":"179","messageId":"180","endLine":21,"endColumn":13},{"ruleId":"177","severity":1,"message":"185","line":101,"column":12,"nodeType":"179","messageId":"180","endLine":101,"endColumn":23},{"ruleId":"177","severity":1,"message":"186","line":104,"column":11,"nodeType":"179","messageId":"180","endLine":104,"endColumn":19},{"ruleId":"177","severity":1,"message":"187","line":107,"column":11,"nodeType":"179","messageId":"180","endLine":107,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":121,"column":8,"nodeType":"190","endLine":121,"endColumn":15,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":13,"column":3,"nodeType":"194","endLine":35,"endColumn":5},{"ruleId":"192","severity":1,"message":"193","line":9,"column":1,"nodeType":"194","endLine":18,"endColumn":2},{"ruleId":"192","severity":1,"message":"193","line":12,"column":1,"nodeType":"194","endLine":37,"endColumn":2},{"ruleId":"177","severity":1,"message":"195","line":2,"column":21,"nodeType":"179","messageId":"180","endLine":2,"endColumn":32},{"ruleId":"177","severity":1,"message":"196","line":21,"column":8,"nodeType":"179","messageId":"180","endLine":21,"endColumn":13},{"ruleId":"177","severity":1,"message":"197","line":32,"column":12,"nodeType":"179","messageId":"180","endLine":32,"endColumn":24},{"ruleId":"177","severity":1,"message":"198","line":32,"column":25,"nodeType":"179","messageId":"180","endLine":32,"endColumn":40},{"ruleId":"177","severity":1,"message":"199","line":95,"column":11,"nodeType":"179","messageId":"180","endLine":95,"endColumn":21},{"ruleId":"188","severity":1,"message":"200","line":110,"column":7,"nodeType":"190","endLine":110,"endColumn":17,"suggestions":"201"},{"ruleId":"177","severity":1,"message":"202","line":76,"column":12,"nodeType":"179","messageId":"180","endLine":76,"endColumn":15},{"ruleId":"177","severity":1,"message":"203","line":102,"column":11,"nodeType":"179","messageId":"180","endLine":102,"endColumn":27},{"ruleId":"204","severity":1,"message":"205","line":108,"column":11,"nodeType":"206","messageId":"207","endLine":108,"endColumn":15,"fix":"208"},{"ruleId":"177","severity":1,"message":"209","line":12,"column":9,"nodeType":"179","messageId":"180","endLine":12,"endColumn":18},{"ruleId":"177","severity":1,"message":"210","line":45,"column":18,"nodeType":"179","messageId":"180","endLine":45,"endColumn":29},{"ruleId":"177","severity":1,"message":"211","line":46,"column":11,"nodeType":"179","messageId":"180","endLine":46,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":111,"column":25,"nodeType":"214","endLine":111,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":130,"column":25,"nodeType":"214","endLine":130,"endColumn":40},{"ruleId":"215","severity":1,"message":"216","line":151,"column":25,"nodeType":"217","endLine":151,"endColumn":49},{"ruleId":"215","severity":1,"message":"216","line":152,"column":19,"nodeType":"217","endLine":152,"endColumn":42},{"ruleId":"177","severity":1,"message":"218","line":1,"column":15,"nodeType":"179","messageId":"180","endLine":1,"endColumn":24},{"ruleId":"177","severity":1,"message":"219","line":1,"column":25,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"177","severity":1,"message":"195","line":2,"column":21,"nodeType":"179","messageId":"180","endLine":2,"endColumn":32},{"ruleId":"177","severity":1,"message":"220","line":3,"column":9,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"221","line":3,"column":20,"nodeType":"179","messageId":"180","endLine":3,"endColumn":24},{"ruleId":"177","severity":1,"message":"222","line":3,"column":25,"nodeType":"179","messageId":"180","endLine":3,"endColumn":34},{"ruleId":"177","severity":1,"message":"223","line":3,"column":46,"nodeType":"179","messageId":"180","endLine":3,"endColumn":51},{"ruleId":"177","severity":1,"message":"224","line":3,"column":52,"nodeType":"179","messageId":"180","endLine":3,"endColumn":59},{"ruleId":"177","severity":1,"message":"225","line":4,"column":9,"nodeType":"179","messageId":"180","endLine":4,"endColumn":12},{"ruleId":"177","severity":1,"message":"226","line":4,"column":13,"nodeType":"179","messageId":"180","endLine":4,"endColumn":29},{"ruleId":"177","severity":1,"message":"227","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":15},{"ruleId":"177","severity":1,"message":"228","line":7,"column":7,"nodeType":"179","messageId":"180","endLine":7,"endColumn":16},{"ruleId":"177","severity":1,"message":"211","line":15,"column":11,"nodeType":"179","messageId":"180","endLine":15,"endColumn":19},{"ruleId":"177","severity":1,"message":"229","line":15,"column":9,"nodeType":"179","messageId":"180","endLine":15,"endColumn":16},{"ruleId":"177","severity":1,"message":"218","line":1,"column":15,"nodeType":"179","messageId":"180","endLine":1,"endColumn":24},{"ruleId":"177","severity":1,"message":"195","line":2,"column":21,"nodeType":"179","messageId":"180","endLine":2,"endColumn":32},{"ruleId":"177","severity":1,"message":"224","line":16,"column":5,"nodeType":"179","messageId":"180","endLine":16,"endColumn":12},{"ruleId":"177","severity":1,"message":"230","line":23,"column":39,"nodeType":"179","messageId":"180","endLine":23,"endColumn":49},{"ruleId":"177","severity":1,"message":"231","line":98,"column":18,"nodeType":"179","messageId":"180","endLine":98,"endColumn":26},{"ruleId":"177","severity":1,"message":"232","line":123,"column":11,"nodeType":"179","messageId":"180","endLine":123,"endColumn":19},{"ruleId":"177","severity":1,"message":"233","line":143,"column":13,"nodeType":"179","messageId":"180","endLine":143,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":185,"column":11,"nodeType":"206","messageId":"207","endLine":185,"endColumn":15,"fix":"234"},{"ruleId":"177","severity":1,"message":"235","line":8,"column":7,"nodeType":"179","messageId":"180","endLine":8,"endColumn":14},{"ruleId":"177","severity":1,"message":"221","line":5,"column":5,"nodeType":"179","messageId":"180","endLine":5,"endColumn":9},{"ruleId":"177","severity":1,"message":"236","line":6,"column":5,"nodeType":"179","messageId":"180","endLine":6,"endColumn":15},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","'red' is defined but never used.","'LockOpen' is defined but never used.","'getASN' is defined but never used.","'Badge' is defined but never used.","'openProfile' is assigned a value but never used.","'location' is assigned a value but never used.","'menuId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'asn' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["239"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useSelector' is defined but never used.","'axios' is defined but never used.","'localReviews' is assigned a value but never used.","'setlocalReviews' is assigned a value but never used.","'getReviews' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'displayData'. Either include it or remove the dependency array.",["240"],"'url' is assigned a value but never used.","'handlefileUpload' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"241","text":"242"},"'loginUser' is defined but never used.","'toggleTheme' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'Map' is defined but never used.","'GoogleApiWrapper' is defined but never used.","'Geocode' is defined but never used.","'useStyles' is assigned a value but never used.","'history' is assigned a value but never used.","'deletePlan' is defined but never used.","'setPlans' is assigned a value but never used.","'getPlans' is assigned a value but never used.","'action' is assigned a value but never used.",{"range":"243","text":"242"},"'saveUrl' is assigned a value but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},[2939,2950],"",[4846,4857],"Update the dependencies array to be: [asn, history, token]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, displayData]",{"range":"250","text":"251"},[4262,4269],"[asn, history, token]",[4191,4201],"[dispatch, displayData]"]